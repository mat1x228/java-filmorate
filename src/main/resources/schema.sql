DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS filmgenres CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS likes CASCADE;

CREATE TABLE IF NOT EXISTS mpa
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(200) UNIQUE
);

CREATE TABLE IF NOT EXISTS films
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(200) NOT NULL,
    description VARCHAR(200),
    releaseDate DATE NOT NULL,
    duration INTEGER NOT NULL,
    mpaid INTEGER REFERENCES mpa(id)
);

CREATE TABLE IF NOT EXISTS genres
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(200) UNIQUE
);


CREATE TABLE IF NOT EXISTS filmgenres (
  filmid INTEGER REFERENCES films(id),
  genreid INTEGER REFERENCES genres(id)
);

CREATE TABLE IF NOT EXISTS users
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(200) NOT NULL UNIQUE,
    login VARCHAR(200) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS friends
(
    userid BIGINT REFERENCES users(id) ON DELETE CASCADE,
    friendid BIGINT REFERENCES users(id) ON DELETE CASCADE,
    PRIMARY KEY (userid, friendid)
);

CREATE TABLE IF NOT EXISTS likes
(

    filmid BIGINT REFERENCES films(id) ON DELETE CASCADE,
    userid BIGINT REFERENCES users(id) ON DELETE CASCADE,

    PRIMARY KEY (userid, filmid)
);
